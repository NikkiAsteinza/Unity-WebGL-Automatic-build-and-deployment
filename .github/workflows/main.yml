name: Unity WebGL Automatic Build ðŸ‘½âœ¨ðŸš€
on:
  push:
    branches: '**'
  workflow_dispatch:
permissions:
  contents: read
  pages: write
  id-token: write
concurrency:
  group: "pages"
  cancel-in-progress: false
jobs:
  build:
    name: Unity Build ðŸ‘½
    runs-on: ubuntu-latest
    steps:
      # Checkout (without LFS)
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          token: ${{secrets.PAT}}
      # Git LFS
      - name: Create LFS file list
        run: git lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-assets-id

      - name: Restore LFS cache
        uses: actions/cache@v2
        id: lfs-cache
        with:
          path: .git/lfs
          key: ${{ runner.os }}-lfs-${{ hashFiles('.lfs-assets-id') }}

      - name: Git LFS Pull
        run: |
          git lfs pull
          git add .
          git reset --hard

      # # Cache
      - uses: actions/cache@v2
        with:
          path: Library
          key: Library-${{ hashFiles('Assets/**', 'Packages/**', 'ProjectSettings/**') }}
          restore-keys: |
            Library-

      # # Build
      - name: Build project
        uses: game-ci/unity-builder@v2
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          targetPlatform: WebGL
          buildsPath: Build
          allowDirtyBuild: true
      # Output: Artifact
      - name: Upload Build Artifact
        uses: actions/upload-artifact@v2
        with:
          name: Build
          path: Build/WebGL
      # Deployment
      - name: Stash build result and reset local changes
        run: |
          echo "Applying initial configs"
          sudo chown -R $USER:$USER Build
          git config --global user.email "${{ secrets.GH_EMAIL }}"
          git config --global user.name "${{ secrets.GH_USERNAME }}"
          echo "Stash and reset"
          git add Build/WebGL
          git stash push Build/WebGL
          git stash list
          git reset --hard
          sudo git clean -d -x -f
    # Deployment
      - name: Clean gh-pages
        run: |
          echo "Switch to gh-pages"
          git switch -f gh-pages
          git reset --hard
          sudo git clean -d -x -f
          
      - name: Apply stashed files to gh-pages
        run: |
          echo "Applying stash"
          git stash apply stash@{0}
          cd Build/WebGL/WebGL
          mv -f * ../../../
          cd ../../../
          git status
          git add *
          git commit -m "Deployment"
          git push
          git reset --hard
          sudo git clean -d -x -f