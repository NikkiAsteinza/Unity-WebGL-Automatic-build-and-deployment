name: Unity WebGL Automatic Build ðŸ‘½âœ¨ðŸš€
on:
  push:
    branches: '**'
  workflow_dispatch:
permissions:
  contents: read
  pages: write
  id-token: write
concurrency:
  group: "pages"
  cancel-in-progress: false
jobs:
  build:
    name: Unity Build ðŸ‘½
    runs-on: ubuntu-latest
    steps:
      # # Checkout (without LFS)
      # - name: Checkout repository
      #   uses: actions/checkout@v2

      # # Git LFS
      # - name: Create LFS file list
      #   run: git lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-assets-id

      # - name: Restore LFS cache
      #   uses: actions/cache@v2
      #   id: lfs-cache
      #   with:
      #     path: .git/lfs
      #     key: ${{ runner.os }}-lfs-${{ hashFiles('.lfs-assets-id') }}

      # - name: Git LFS Pull
      #   run: |
      #     git lfs pull
      #     git add .
      #     git reset --hard

      # # Cache
      # - uses: actions/cache@v2
      #   with:
      #     path: Library
      #     key: Library-${{ hashFiles('Assets/**', 'Packages/**', 'ProjectSettings/**') }}
      #     restore-keys: |
      #       Library-

      # # Build
      # - name: Build project
      #   uses: game-ci/unity-builder@v2
      #   env:
      #     UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
      #     UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
      #     UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
      #   with:
      #     targetPlatform: WebGL
      #     buildsPath: Build
      #     allowDirtyBuild: true

      # Output
      - name: Deploy to gh-page branch
        run: |
          sudo mkdir /Build/WebGL/ && sudo touch /Build/WebGL/hola.txt
          ls
          git config --global user.email "${{ secrets.GH_EMAIL }}"
          git config --global user.name "${{ secrets.GH_USERNAME }}"
          cd /Build/WebGL/
          ls
          git add .
          git status
          git stash save --keep-index "Latest build"
          git stash list
          git reset --hard
          git checkout gh-pages
          git stash apply "Latest build"
          git add *
          git commit -m "Deployment"
          git push
          git stash pop "Latest build"
          git stash list
# Build job


  # jekyll:
  #   name: Jekyll Build âœ¨
  #   runs-on: ubuntu-latest
  #   needs: build
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v3
  #     - name: Setup Pages
  #       uses: actions/configure-pages@v3
  #     - name: Build with Jekyll
  #       uses: actions/jekyll-build-pages@v1
  #       with:
  #         source: ./Build/WebGL/WebGL/
  #         destination: ./site
  #     - name: Upload artifact
  #       uses: actions/upload-pages-artifact@v2
  # deploy:
  #   name: Page Deployment ðŸš€
  #   environment:
  #     name: github-pages
  #     url: ${{ steps.deployment.outputs.page_url }}
  #   runs-on: ubuntu-latest
  #   needs: jekyll
  #   steps:
  #     - name: Deploy to GitHub Pages ðŸš€
  #       id: deployment
  #       uses: actions/deploy-pages@v2
  #  page:
  #     name: Page Deployment ðŸš€
  #     runs-on: ubuntu-latest
  #     needs: build
  #     steps:
  #       - name: Checkout repository
  #         uses: actions/checkout@v2
  #       - name: Create folder
  #         run: |
  #           mkdir -p docs
  #           ls docs
  #       # Deploy to GitHub Pages using peaceiris/actions-gh-pages
  #       - name: Deploy to GitHub Pages
  #         uses: peaceiris/actions-gh-pages@v3
  #         with:
  #           personal_token: ${{ secrets.PAT }}
  #           publish_dir: docs